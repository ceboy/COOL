cas1: Dirichlet problems for LAPLACE in squares

///////////////////////////////////////////////////////////////////////////////////

geo1mesh1: 10*10 square with flag 3

///////////////////////////////////////////////////////////////////////////////////



// func f = 2.*cos(x)*sin(y); // cas 2

// func fx = 0;//pi^2*sin(y*pi)*(1./2.+cos(x*pi));
// func fy = 0;//-pi^2*sin(x*pi)*(1./2.+cos(y*pi));
// func uana = sin(y*pi)*(1+cos(x*pi))/2; 
// func vana = -sin(x*pi)*(1+cos(y*pi))/2; 

//real[int,int] utab(11^2*finessemax^2,finessemax); // P1
// real[int,int] utab((11^2+2*10*11+10^2)*finessemax^2,finessemax); // P2
// real[int] errl2(finessemax-1),errh1(finessemax-1);
// utab(0:Uh.ndof-1,finesse-1) = u[];
// //u = u-sin(pi*x)*sin(pi*y); // cas 1
// u = u-cos(x)*sin(y); // cas 2
// plot(Th,u,fill=1,value=true,wait=1,cmm="error");

///////////////////////////////////////////////////////////////////////////////////
// POST-PROCESSING
///////////////////////////////////////////////////////////////////////////////////

// {ofstream ff("convergence.gp");
// mesh Th0 = square(10*finessemax,10*finessemax);
// //fespace Uh0(Th0,P1);
// fespace Uh0(Th0,P2);
// Uh0 u0;
// for (int finesse = 1;finesse < finessemax; finesse ++) {
//   mesh Th = square(10*finesse,10*finesse);
//   //fespace Uh(Th,P1);
//   fespace Uh(Th,P2);
//   Uh u,v;
//   u[] = utab(0:Uh.ndof-1,finesse-1); 
//   u0[] = utab(0:Uh0.ndof-1,finessemax-1); // in case one does not know exact solution
//   //u0 = sin(pi*x)*sin(pi*y); // cas 1
//   //u0 = cos(x)*sin(y); // cas 2
//   u0 = u0-u; // interpolation 
//   errl2(finesse-1) = sqrt(int2d(Th0)(u0*u0));
//   errh1(finesse-1) = sqrt(int2d(Th0)(square(dx(u0))+square(dy(u0))));
//   //u = u-u0; // interpolation 
//   //errl2(finesse-1) = sqrt(int2d(Th)(u*u)); // this is of course much less precise
//   //errh1(finesse-1) = sqrt(int2d(Th)(square(dx(u))+square(dy(u)))); // thusmuch less good
//   ff << 1./(10*finesse) << "  "  << errl2(finesse-1) << "  "  << errh1(finesse-1) << endl;
// }
// ff<<"\n\n\n";}
// 
// exec("echo 'plot \"convergence.gp\" using 1:2 w l\
// pause 2 \
// set term postscript enhanced color \
// set output \"convergencel2.eps\" \
// replot \
// ' | gnuplot");
// 
// exec("echo 'plot \"convergence.gp\" using 1:3 with lines\
// pause 2 \
// set term postscript \
// set output \"convergenceh1.eps\" \
// replot \
// quit \
// ' | gnuplot");

// set yrange [0:2.1]
// set style line 1 lt 1 lw 1
// set style line 2 lt 2 lw 3
// set style line 3 lt 6 lw 1
// set term x11
